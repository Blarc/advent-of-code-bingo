{
    "swagger": "2.0",
    "info": {
        "description": "Advent of Code Bingo API in Go using Gin framework.",
        "title": "Advent of Code Bingo API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api/v1",
    "paths": {
        "/bingoBoard": {
            "post": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "Create a new bingo board with random bingo cards.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bingo Board"
                ],
                "summary": "Create bingo board.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserDto"
                        }
                    }
                }
            }
        },
        "/bingoBoard/{id}": {
            "get": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "Get a bingo board.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bingo Board"
                ],
                "summary": "Get bingo board.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bingo Board ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.BingoBoardDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "Irrevocably delete a bingo board.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bingo Board"
                ],
                "summary": "Delete bingo board.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserDto"
                        }
                    }
                }
            }
        },
        "/bingoBoard/{id}/join": {
            "post": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "Join a bingo board.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bingo Board"
                ],
                "summary": "Join bingo board.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bingo Board ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserDto"
                        }
                    }
                }
            }
        },
        "/bingoBoard/{id}/leave": {
            "delete": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "Leave a bingo board.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bingo Board"
                ],
                "summary": "Leave bingo board.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bingo Board ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserDto"
                        }
                    }
                }
            }
        },
        "/bingoCard": {
            "get": {
                "description": "Get all bingo cards.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bingo Card"
                ],
                "summary": "Get all bingo cards.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/entity.BingoCardDto"
                            }
                        }
                    }
                }
            }
        },
        "/bingoCard/{id}/click": {
            "post": {
                "description": "Add or remove bingo card from user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Click bingo card.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserDto"
                        }
                    }
                }
            }
        },
        "/me": {
            "get": {
                "security": [
                    {
                        "Token": []
                    }
                ],
                "description": "Get information about the user that is currently logged in.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get user information.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/entity.UserDto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/v1.response"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "entity.BingoBoardDto": {
            "type": "object",
            "properties": {
                "bingo_cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.BingoCardDto"
                    }
                },
                "name": {
                    "type": "string"
                },
                "short_uuid": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.UserDto"
                    }
                }
            }
        },
        "entity.BingoCardDto": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "user_count": {
                    "type": "integer"
                }
            }
        },
        "entity.UserDto": {
            "type": "object",
            "properties": {
                "avatar_url": {
                    "type": "string"
                },
                "bingo_boards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.BingoBoardDto"
                    }
                },
                "bingo_cards": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entity.BingoCardDto"
                    }
                },
                "github_url": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "personal_bingo_board": {
                    "$ref": "#/definitions/entity.BingoBoardDto"
                },
                "reddit_url": {
                    "type": "string"
                }
            }
        },
        "v1.response": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string",
                    "example": "message"
                }
            }
        }
    },
    "securityDefinitions": {
        "Token": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}