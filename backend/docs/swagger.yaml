basePath: /api/v1
definitions:
  entity.BingoBoardDto:
    properties:
      bingo_cards:
        items:
          $ref: '#/definitions/entity.BingoCardDto'
        type: array
      name:
        type: string
      short_uuid:
        type: string
      users:
        items:
          $ref: '#/definitions/entity.UserDto'
        type: array
    type: object
  entity.BingoCardDto:
    properties:
      description:
        type: string
      id:
        type: string
      user_count:
        type: integer
    type: object
  entity.UserDto:
    properties:
      avatar_url:
        type: string
      bingo_boards:
        items:
          $ref: '#/definitions/entity.BingoBoardDto'
        type: array
      bingo_cards:
        items:
          $ref: '#/definitions/entity.BingoCardDto'
        type: array
      github_url:
        type: string
      name:
        type: string
      personal_bingo_board:
        $ref: '#/definitions/entity.BingoBoardDto'
      reddit_url:
        type: string
    type: object
  v1.response:
    properties:
      error:
        example: message
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: Advent of Code Bingo API in Go using Gin framework.
  title: Advent of Code Bingo API
  version: "1.0"
paths:
  /bingoBoard:
    post:
      consumes:
      - application/json
      description: Create a new bingo board with random bingo cards.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserDto'
      security:
      - Token: []
      summary: Create bingo board.
      tags:
      - Bingo Board
  /bingoBoard/{id}:
    delete:
      consumes:
      - application/json
      description: Irrevocably delete a bingo board.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserDto'
      security:
      - Token: []
      summary: Delete bingo board.
      tags:
      - Bingo Board
    get:
      consumes:
      - application/json
      description: Get a bingo board.
      parameters:
      - description: Bingo Board ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.BingoBoardDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - Token: []
      summary: Get bingo board.
      tags:
      - Bingo Board
  /bingoBoard/{id}/join:
    post:
      consumes:
      - application/json
      description: Join a bingo board.
      parameters:
      - description: Bingo Board ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserDto'
      security:
      - Token: []
      summary: Join bingo board.
      tags:
      - Bingo Board
  /bingoBoard/{id}/leave:
    delete:
      consumes:
      - application/json
      description: Leave a bingo board.
      parameters:
      - description: Bingo Board ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserDto'
      security:
      - Token: []
      summary: Leave bingo board.
      tags:
      - Bingo Board
  /bingoCard:
    get:
      consumes:
      - application/json
      description: Get all bingo cards.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/entity.BingoCardDto'
            type: array
      summary: Get all bingo cards.
      tags:
      - Bingo Card
  /bingoCard/{id}/click:
    post:
      consumes:
      - application/json
      description: Add or remove bingo card from user.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserDto'
      summary: Click bingo card.
      tags:
      - User
  /me:
    get:
      consumes:
      - application/json
      description: Get information about the user that is currently logged in.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/entity.UserDto'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - Token: []
      summary: Get user information.
      tags:
      - User
securityDefinitions:
  Token:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
